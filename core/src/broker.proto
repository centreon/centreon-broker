syntax = "proto3";

import "google/protobuf/empty.proto";

package com.centreon.broker;

service Broker {
  rpc GetVersion(google.protobuf.Empty) returns (Version) {}

  // stats
  rpc GetGenericStats(google.protobuf.Empty) returns (GenericString) {}
  rpc GetSqlConnectionStats(google.protobuf.Empty) returns (BrokerStats) {}
  rpc GetConflictManagerStats(google.protobuf.Empty) returns (BrokerStats) {}

  rpc GetNumModules(google.protobuf.Empty) returns (GenericSize) {}
  rpc GetModulesStats(GenericNameOrIndex) returns (GenericString) {}

  rpc GetNumEndpoint(google.protobuf.Empty) returns (GenericSize) {}
  rpc GetEndpointStats(GenericNameOrIndex) returns (GenericString) {}

  rpc GetStats(StatsQuery) returns (BrokerStats) {}
}

message Version {
  int32 major = 1;
  int32 minor = 2;
  int32 patch = 3;
}

message GenericString {
  string str_arg = 1;
}

message GenericSize {
  uint32 size = 1;
}

// 1 => access by name
// 2 => access by index
// not set => all elems
message GenericNameOrIndex {
  oneof nameOrIndex {
    string str = 1;
    uint32 idx = 2;
  }
}

message GenericResponse {
  bool ok = 1;
  string err_msg = 2;
}

message StatsQuery {
  enum Part {
    ENGINE = 0;
    THREAD_POOL = 1;
  }
  repeated Part query = 1;
}

message EngineStats {
  enum Mode {
    NOP = 0;
    WRITE = 1;
    WRITE_TO_CACHE_FILE = 2;
  }
  Mode mode = 1;
  uint32 unprocessed_events = 2;
}

message SqlConnectionStats {
 int32 waiting_tasks = 1;
 }

message ConflictManagerStats {
 int32 events_handled = 1;
 int32 waiting_events = 2;
 int32 max_pending_events = 3;
 int32 sql = 4;
 int32 storage = 5;
 uint32 max_perfdata_events = 6;
 uint32 loop_timeout = 7;
 double speed = 8;
}

message ModuleStats {
  string name = 1;
  string size = 2;
  string state = 3;
}

message ThreadPool {
  string latency = 1;
  uint32 size = 2;
}

message BrokerStats {
  string asio_version = 1;
  string version = 2;
  uint32 pid = 3;
  int64 now = 4;
  ThreadPool pool_stats = 5;
  EngineStats engine = 6;
  repeated ModuleStats modules = 7;
  repeated SqlConnectionStats connections = 8;
  ConflictManagerStats conflict_manager = 9;
}
